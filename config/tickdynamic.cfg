# Configuration file

##########################################################################################################
# general
#--------------------------------------------------------------------------------------------------------#
# WEBSITE: https://mods.curse.com/mc-mods/minecraft/269359-tick-dynamic   <- Head here for the documentation, or if you have questions.
# ISSUE TRACKER: https://github.com/The-Fireplace/TickDynamic/issues   <- Go here if you have problems, log spam, or suggestions to improve the mod.
# 
# Slices are the way you control the time allotment to each world, and within each world, to Entities and TileEntities.
# Each tick the time for a tick(By default 50ms) will be distributed among all the worlds, according to how many slices they have.
# If you have 3 worlds, each with 100 slices, then each world will get 100/300 = ~33% of the time.
# So you can thus give the Overworld a maxSlices of 300, while giving the other two 100 each. This way the Overworld will get 60% of the time.
# 
# Of the time given to the world, this is further distributed to TileEntities and Entities according to their slices, the same way.
# TileEntities and Entities are given a portion of the time first given to the world, so their slices are only relative to each other within that world.If any group has unused time, then that time will be distributed to the remaining groups.
# So even if you give 1000 slices to TileEntities and 100 to Entities, as long as as TileEntities aren't using it's full time,
# Entities will be able to use more than 100 slices of time.
# 
# So the formula for slices to time percentage is: (singleGroupInWorld.maxSlices/combinedGroupsInWorld.maxSlices)*100
# 
# Note: maxSlices = 0 has a special meaning. It means that the group's time usage is accounted for, but not limited.
# Basically it can take all the time it needs, even if it goes above the parent maxTime, pushing its siblings down to minimumObjects.
##########################################################################################################

general {
    # How many ticks of data to use when averaging for time balancing.
    # A higher number will make it take regular spikes into account, however will make it slower to adjust to changes.
    I:averageTicks=20

    # Debug Group mapping and assignment. Will spam during world load and config reload!!!
    B:debugGroups=false

    # Debug output from time allocation and calculation. Warning: Setting this to true will cause a lot of console spam.
    # Only do it if developer or someone else asks for the output!
    B:debugTimer=false

    # The default maxSlices for a new automatically added world.
    I:defaultWorldSlicesMax=100
    B:enabled=true

    # Disables all log output to the console. Make sure this is off before providing the author with logs.
    B:nologs=true
}


groups {

    entity {
        B:enabled=true
        S:entityClassNames <
            
         >
        S:entityNames <
            
         >
        S:groupType=Entity
        I:minimumObjects=100
        D:minimumTPS=00.0
        D:minimumTime=0.0
        S:modId <
            
         >
        I:slicesMax=0
        B:useCorrectedTime=true
    }

    players {
        B:enabled=true
        S:entityClassNames <
            net.minecraft.entity.player.EntityPlayer
            net.minecraft.entity.player.EntityPlayerMP
         >
        S:entityNames <
            
         >
        S:groupType=Entity
        I:minimumObjects=100
        D:minimumTPS=0.0
        D:minimumTime=0.0
        S:modId <
            
         >
        I:slicesMax=0
        B:useCorrectedTime=true
    }

    tileentity {
        B:enabled=true
        S:entityClassNames <
            
         >
        S:entityNames <
            
         >
        S:groupType=TileEntity
        I:minimumObjects=100
        D:minimumTPS=0.0
        D:minimumTime=0.0
        S:modId <
            
         >
        I:slicesMax=100
        B:useCorrectedTime=true
    }

}


worlds {
    # The time allotted to a tick in milliseconds. 20 Ticks per second means 50ms per tick.
    # This is the base time allotment it will use when balancing the time usage between worlds and objects.
    # You can set this to less than 50ms if you want to leave a bit of buffer time for other things, or don't want to use 100% cpu.
    I:tickTime=50

    dim0 {
        I:slicesMax=100

        entity {
            S:groupType=Entity
            I:slicesMax=900
        }

        tileentity {
            S:groupType=TileEntity
            I:slicesMax=100
        }

    }

    dim-1 {
        I:slicesMax=100
    }

    dim1 {
        I:slicesMax=100
    }

    dim50 {
        I:slicesMax=100
    }

    dim51 {
        I:slicesMax=100
    }

    dim52 {
        I:slicesMax=100
    }

    dim53 {
        I:slicesMax=100
    }

    dim20 {
        I:slicesMax=100
    }

    dim-23 {
        I:slicesMax=100
    }

    dim-24 {
        I:slicesMax=100
    }

    dim4598 {
        I:slicesMax=100
    }

    dim7 {
        I:slicesMax=100
    }

    dim-2 {
        I:slicesMax=100
    }

    dim2 {
        I:slicesMax=100
    }

}


